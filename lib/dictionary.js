// Generated by CoffeeScript 1.3.3
(function() {
  var Dictionary, Module, exports, moduleKeywords, youDaoModule,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  moduleKeywords = ['extended', 'included'];

  Module = (function() {

    function Module() {}

    Module.include = function(obj) {
      var key, value, _ref;
      for (key in obj) {
        value = obj[key];
        if (__indexOf.call(moduleKeywords, key) < 0) {
          this.prototype[key] = value;
        }
      }
      if ((_ref = obj.included) != null) {
        _ref.apply(this);
      }
      return this;
    };

    return Module;

  })();

  youDaoModule = {
    translate: function(word, onSuccess, onFailure) {
      var failureCallback, url, xhr;
      xhr = new window.XMLHttpRequest();
      url = "http://fanyi.youdao.com/openapi.do?keyfrom=" + this.options.keyfrom + "&key=" + this.options.key + "&type=data&doctype=json&version=1.1&q=" + word;
      xhr.open('GET', url, onSuccess != null);
      if (onSuccess != null) {
        failureCallback = onFailure != null ? onFailure : function() {};
        xhr.onreadystatechange = function() {
          if (xhr.readyState === 4 && xhr.status === 200) {
            onSuccess(xhr.responseText);
          }
          if (xhr.readyState === 4 && xhr.status !== 200) {
            return failureCallback(xhr.responseText);
          }
        };
      }
      xhr.send(null);
      if (onSuccess == null) {
        if (xhr.status === 200) {
          try {
            return eval("(" + xhr.responseText + ")").translation.join();
          } catch (error) {
            return null;
          }
        } else {
          return xhr.statusText;
        }
      }
    }
  };

  Dictionary = (function(_super) {

    __extends(Dictionary, _super);

    function Dictionary(name, options) {
      this.name = name;
      this.options = options != null ? options : {};
      if (this.name === 'youdao') {
        Dictionary.include(youDaoModule);
      }
    }

    return Dictionary;

  })(Module);

  exports = this;

  exports.Dictionary = Dictionary;

}).call(this);
